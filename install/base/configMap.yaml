---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-audit-logging
  labels:
    app.kubernetes.io/component: collection
data:
  fluent.conf: |
    <system>
      log_level info
    </system>
    <source>
      @type kubernetes_objects
      tag kube.objects.*
      api_version "v1"
      insecure_ssl false
      <watch>
        resource_name pods
      </watch>
    </source>

    <filter kube.**>
      @type jq_transformer
      # in ruby '\\' will escape and become just '\', since we need two '\' in the `gsub` jq filter, it becomes '\\\\'.
      jq '.record.source = "namespace:\(env.MY_NAMESPACE)/pod:\(env.MY_POD_NAME)" | .record.sourcetype = (.tag | gsub("\\\\."; ":")) | .record'
    </filter>

    # This replaces all . with _ in labels/annotations/etc.  This causes issues when there are multiple labels in the environment:
    # app: foo and app.kubernetes.io/something: foo since app is both a field and an object, so Elasticsearch cannot
    # understand how to parse
    <filter **>
      @type dedot
      @id test_dedot
      de_dot_nested true
      de_dot_separator _
    </filter>

    <filter kube.objects.pods>
      @type jq_transformer
      jq '.record.images = [ .record.object.status.containerStatuses | .[]?.image ] | .record'
    </filter>
    <filter kube.objects.pods>
      @type jq_transformer
      jq '.record.imageIDs = [.record.object.status.containerStatuses | .[]?.imageID ] | .record '
    </filter>

    <filter kube.objects.pods>
      @type jq_transformer
      jq '.record.phase = [.record.object.status.phase ] | .record '
    </filter>

    # variable status fields cause input errors. So we extracted the values we want above 
    # and then clear out the rest of the status here:
    <filter kube.objects.pods>
      @id remove_managed_fields
      @type record_transformer
      remove_keys $.object.metadata.managedFields
    </filter>

    <match kube.objects.pods>
      @type elasticsearch
      include_tag_key true
      port 9200
      scheme https
      ca_file /etc/elasticsearch/certs/ca.crt
      host elasticsearch-es-http
      user elastic
      password "#{ENV['ELASTIC_PASSWORD']}"
      index_name pods2
      reload_connections true
      reload_after 100
      loglevel debug
      logstash_format true
      logstash_prefix pods
    </match>

