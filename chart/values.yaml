collect:
  objects: false
  violations:
    repositories: true
    labels: false

elasticsearch:
  name: logging-ek
  dedicated: false
  imagePullSecrets: []
istio:
  enabled: false

violations:
  bannedImageTags:
    enabled: true
    enforcementAction: dryrun
    tags:
      - "latest"
  allowedDockerRegistries:
    enabled: true
    enforcementAction: dryrun
    repos:
      - "registry1.dso.mil"
      - "registry.dso.mil"
  restrictedTaint:
    enabled: true
    enforcementAction: dryrun
    match: {}
    # namespaceSelector:
    #   matchExpressions:
    #   - {key: name, operator: In, values: [tenant]}
    parameters:
      restrictedTaint:
        key: privileged
        effect: NoSchedule
        value: "true"
      allowGlobalToleration: false
  noBigContainers:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match:
      {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
    parameters:
      cpu: 2000m
      memory: 4G
      exemptContainers: [""]
  noPriviligedContainers:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match:
      {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
  uniqueIngressHost:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match: {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
  noHostNamespace:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match: {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
  blockNodePort:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match: {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
  requiredLabels:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match:
      {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
    parameters:
      labels:
        - key: "app.kubernetes.io/name"
          allowedRegex: ""
        - key: "app.kubernetes.io/instance"
          allowedRegex: ""
        - key: "app.kubernetes.io/version"
          allowedRegex: ""
        - key: "app.kubernetes.io/component"
          allowedRegex: ""
        - key: "app.kubernetes.io/part-of"
          allowedRegex: ""
        - key: "app.kubernetes.io/managed-by"
          allowedRegex: ""
  volumeTypes:
    enabled: true
    enforcementAction: dryrun
    # specify how to subset the pods
    match: {}
      # namespaceSelector:
      #   matchExpressions:
      #   - {key: name, operator: In, values: [tenant]}
    parameters:
      volumes:
      # - "*" # * may be used to allow all volume types
      - configMap
      - emptyDir
      - projected
      - secret
      - downwardAPI
      - persistentVolumeClaim
      - hostPath #required for allowedHostPaths
      - flexVolume #required for allowedFlexVolumes

image:
  repo: registry1.dso.mil/ironbank/cluster-auditor/opa-collector
  tag: 0.3.2
  imagePullPolicy: Always

imagePullSecrets:
  - name: private-registry

tolerations: []

resources:
  requests:
    cpu: 600m
    memory: 2Gi
  limits:
    cpu: 600m
    memory: 2Gi
loglevel: debug

affinity:
  {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - topologyKey: "kubernetes.io/hostname"
  #       labelSelector:
  #         matchLabels:
  #           dont-schedule-with: cluster-auditor
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: node-type
  #         operator: In
  #         values:
  #         - "cluster-auditor"

nodeSelector:
  {}
  # node-type: cluster-auditor
